#!/bin/sh
prompt_install() {
	echo -n "install $1? (y/n) " >&2
	old_stty_cfg=$(stty -g)
	stty raw -echo
	answer=$( while ! head -c 1 | grep -i '[ny]' ;do true ;done )
	stty $old_stty_cfg && echo
	if echo "$answer" | grep -iq "^y" ;then
		if [ -x "$(command -v brew)" ]; then
			brew install $1

		elif [ -x "$(command -v pacman)" ]; then
			sudo pacman -S $1

		elif [ -x "$(command -v apt)" ]; then
			sudo apt install $1

		else
			echo "Package system could not be infered. Install $1 and launch deploy again." 
		fi 
	fi
}

check_for_software() {
	echo -n "Checking if $1 is installed: "
	if ! [ -x "$(command -v $1)" ]; then
		echo "✗ no"
		prompt_install $1
	else
		echo "✓ ok"
	fi
}

check_default_shell() {
	echo -n "Checking default shell: "
	if [ -z "${SHELL##*zsh*}" ] ;then
			echo "✓ zsh"
	else
		echo -n "✗ it is not zsh. Change this? (chsh -s \$(which zsh))? (y/n) "
		old_stty_cfg=$(stty -g)
		stty raw -echo
		answer=$( while ! head -c 1 | grep -i '[ny]' ;do true ;done )
		stty $old_stty_cfg && echo
		if echo "$answer" | grep -iq "^y" ;then
			chsh -s $(which zsh) && echo " ... ✓ ok"
		fi
	fi
}

asdf_vm_install() {
	echo -n "Checking for asdf-vm: "
	if [ -e ~/.asdf ]; then
		echo "✓ ok"
	else
		echo -n "✗ nope. Installing ... "
		git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.0
		[ 0 -eq $? ] && echo "✓ ok"
	fi
}

echo "Deploying dotfiles is about"
echo "1. Checking for useful apps:"
echo "   . zsh, xclip, exa, zoxide"
echo "   . git, tig, curl"
echo "   . asdf"
echo "2. Install what may be missing"
echo "3. Check and define zsh as default shell, if necessary"

echo "Let's start? (y/n)"
old_stty_cfg=$(stty -g)
stty raw -echo
answer=$( while ! head -c 1 | grep -i '[ny]' ;do true ;done )
stty $old_stty_cfg
if echo "$answer" | grep -iq "^y" ;then
	echo 
else
	echo "Leaving, nothing has been changed."
	exit 0
fi


check_for_software zsh
check_for_software exa
check_for_software curl
check_for_software git
check_for_software tig
check_for_software zoxide
asdf_vm_install
echo

check_default_shell

echo
echo -n "Would you like to save (rename to *.old) current dotfiles? (y/n)"
old_stty_cfg=$(stty -g)
stty raw -echo
answer=$( while ! head -c 1 | grep -i '[ny]' ;do true ;done )
stty $old_stty_cfg
if echo "$answer" | grep -iq "^y" ;then
	mv ~/.zshrc ~/.zshrc.old
	mv ~/.zprofile ~/.zprofile.old
	mv ~/.tigrc ~/.tigrc.old
else
	echo -e "\nOld dotfiles will be overwritten."
fi

printf "source '$HOME/dotfiles/zsh/zshrc_manager.sh'" > ~/.zshrc
printf "source '$HOME/dotfiles/profile.sh'" > ~/.zprofile
ln -s ./tigrc ~/.tigrc

echo
echo "Logout or restart to get new configurations running. Enjoy!"
